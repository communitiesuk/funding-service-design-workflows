on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_call:
    inputs:
      assets_required:
        required: false
        default: false
        type: boolean
      postgres_unit_testing:
        required: false
        default: false
        type: boolean
      db_name:
        required: false
        default: "postgres_db"
        type: string
      deploy_to_dev:
        required: false
        default: true
        type: boolean
      run_performance_tests:
        required: false
        default: false
        type: boolean
      run_e2e_tests:
        required: false
        default: true
        type: boolean
      environment::
        required: false
        default: dev
        type: string

    # not required when not deploying to cf
    secrets:
      GOV_NOTIFY_API_KEY:
        required: false

      #Needed to clone and execute the e2e tests
      E2E_PAT:
        required: true
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:

  testing-unit-aws:
    runs-on: ubuntu-latest
    environment: Dev
    if: ${{ inputs.postgres_unit_testing == false }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
      - name: build static assets (if frontend)
        if: ${{inputs.assets_required == true}}
        env:
          FLASK_ENV: "development"
        run: python build.py
      - name: run unit tests
        env:
          GOV_NOTIFY_API_KEY: ${{ secrets.GOV_NOTIFY_API_KEY }}
        # pytest -m "not accessibility" runs every test which is not marked 
        # accessibility.
        run: python -m pip install pytest && python -m pytest -m "not accessibility" .
        
  testing-unit-postgres-aws: 
    runs-on: ubuntu-latest
    environment: Dev
    if: ${{ inputs.postgres_unit_testing == true }}
    services:
      # Label used to access the service containers
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ${{inputs.db_name}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
      - name: run unit tests
        run: python -m pip install pytest && python -m pytest -m "not accessibility"

  run_shared_tests_dev_aws:
    needs: deploy_dev
    concurrency: run_shared_tests_dev
    if: ${{ always() && (inputs.deploy_to_dev == true && needs.deploy_dev.result=='success' ) && github.actor != 'dependabot[bot]' }}
    uses: ./.github/workflows/run-shared-tests.yml
    with:
      perf_test_target_url_application_store: https://${{ inputs.environment }}.application-store.test.levellingup.gov.uk
      perf_test_target_url_fund_store: https://${{ inputs.environment }}.fund-store.test.levellingup.gov.uk
      perf_test_target_url_assessment_store: https://${{ inputs.environment }}.assessment-store.test.levellingup.gov.uk
      e2e_tests_target_url_frontend: https://fsd:fsd@${{ inputs.environment }}.frontend.test.levellingup.gov.uk
      e2e_tests_target_url_authenticator: https://fsd:fsd@${{ inputs.environment }}.authenticator2.test.levellingup.gov.uk
      e2e_tests_target_url_form_runner: https://fsd:fsd@${{ inputs.environment }}.forms.test.levellingup.gov.uk
      e2e_tests_target_url_assessment: https://fsd:fsd@${{ inputs.environment }}.assessment.test.levellingup.gov.uk
      run_performance_tests: ${{inputs.run_performance_tests}}
      run_e2e_tests: false
    secrets:
       E2E_PAT: ${{secrets.E2E_PAT}}

  static_security_aws:
    if: ${{ always() && (needs.testing-unit.result=='success' || needs.testing.result=='success' || needs.testing-unit-postgres.result=='success')}}
    needs: [testing-unit, testing-unit-postgres]
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt bandit==1.7.4
      - name: Bandit
        run: bandit -r ./app
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'https://${{ inputs.environment }}.assessment.test.levellingup.gov.uk/'
          allow_issue_writing: False
