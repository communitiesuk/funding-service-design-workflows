on: 
  workflow_call:
    inputs:
      e2e_tests_target_url_frontend: 
        type: string
        required:  false # TODO Make this true when all repos updated
      e2e_tests_target_url_authenticator: 
        type: string
        required:  false # TODO Make this true when all repos updated
      e2e_tests_target_url_form_runner: 
        type: string
        required:  false # TODO Make this true when all repos updated
      e2e_tests_target_url_assessment: 
        type: string
        required:  false # TODO Make this true when all repos updated
      perf_test_target_url_application_store: 
        type: string
        required: false
      perf_test_target_url_fund_store: 
        type: string
        required: false
      perf_test_target_url_assessment_store: 
        type: string
        required: false
      users:
        required: false
        default: 2
        type: string
      spawn-rate: 
        required: false
        default: 1
        type: string
      run-time: 
        required: false
        default: 10s
        type: string
      run_performance_tests:
        required: false
        default: false
        type: boolean
      run_e2e_tests:
        required: false
        default: true
        type: boolean
      run_accessibility_tests:
        required: false
        default: false
        type: boolean
    secrets:
      E2E_PAT:
        required: false # TODO Make this true when all repos updated

jobs:
  run_e2e_tests:
    runs-on: ubuntu-latest
    concurrency: inputs.run_e2e_tests
    if: ${{ inputs.run_e2e_tests == true}}
    defaults:
      run:
        working-directory: ./funding-service-design-e2e-checks
    steps:
      - name: Checkout E2E tests
        uses: actions/checkout@v3
        with:
          repository: communitiesuk/funding-service-design-e2e-checks
          path: ./funding-service-design-e2e-checks
          token: ${{ secrets.E2E_PAT }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16.3.0
      - name: Install
        run: npm install
      - name: Run WebDriver IO Tests
        run: npx wdio run ./wdio.conf_headless.js
        env:
          TARGET_URL_FRONTEND: ${{inputs.e2e_tests_target_url_frontend}}
          TARGET_URL_AUTHENTICATOR: ${{inputs.e2e_tests_target_url_authenticator}}
          TARGET_URL_FORM_RUNNER: ${{inputs.e2e_tests_target_url_form_runner}}
          TARGET_URL_ASSESSMENT: ${{inputs.e2e_tests_target_url_assessment}}
      - name: Upload E2E Test Report
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-report
          path: ./funding-service-design-e2e-checks/results
          retention-days: 5
          
  run_performance_tests:
    runs-on: ubuntu-latest
    concurrency: inputs.run_performance_tests
    if: ${{ inputs.run_performance_tests == true}}
    defaults:
      run:
        working-directory: ./funding-service-design-performance-tests
    steps:
      - name: checkout performance tests repo
        uses: actions/checkout@main
        with:
          repository: communitiesuk/funding-service-design-performance-tests
          path: ./funding-service-design-performance-tests
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x

      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: Run performance tests
        env:
          TARGET_URL_FUND_STORE: ${{inputs.perf_test_target_url_fund_store}}
          TARGET_URL_APPLICATION_STORE: ${{inputs.perf_test_target_url_application_store}}
          TARGET_URL_ASSESSMENT_STORE: ${{inputs.perf_test_target_url_assessment_store}}
        run: ls && source .venv/bin/activate && python -m locust --users ${{inputs.users}} --spawn-rate ${{inputs.spawn-rate}} --run-time ${{inputs.run-time}}

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: performance-test-report
          path: ./funding-service-design-performance-tests/locust_html_report.html
          retention-days: 5


# Commented out as there aren't any shared accessibility tests

  # run_accessibility_tests:
  #   if: ${{ inputs.run_accessibility_tests == true}}
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./funding-service-design-performance-tests
  #   steps:
  #     - name: checkout performance tests repo
  #       uses: actions/checkout@main
  #       with:
  #         repository: communitiesuk/funding-service-design-performance-tests
  #         path: ./funding-service-design-performance-tests
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.10.x
  #     - name: create python env
  #       run: pwd & python -m venv .venv
  #     - name: install dependencies
  #       run: pwd & source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
  #     - name: Install Chromium
  #       uses: browser-actions/setup-chrome@latest
  #     - name: setup Chromedriver
  #       uses: nanasess/setup-chromedriver@v1
  #       with:
  #       # Optional: do not specify to match Chrome's version
  #         chromedriver-version: '88.0.4324.96'
  #     - name: Run Accessability tests
  #       # Runs only the accessibility tests once a dev deployment has been made.
  #       run: pwd && source .venv/bin/activate && python -m pip install pytest pytest-selenium && python -m pytest -m "accessibility"
  #     - name: 'Upload Accessibility Testing reports'
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: accessibility-test-report
  #         path: /home/runner/work/funding-service-design-frontend/funding-service-design-frontend/axe_reports/*.html
  #         retention-days: 5