on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_call:
    inputs:
      assets_required:
        required: false
        default: false
        type: boolean
      postgres_unit_testing:
        required: false
        default: false
        type: boolean
      db_name:
        required: false
        default: "postgres_db"
        type: string
      run_performance_tests:
        required: false
        default: false
        type: boolean
      run_e2e_tests_application:
        required: false
        default: true
        type: boolean
      run_e2e_tests_assessment:
        required: false
        default: true
        type: boolean
      run_static_security_python:
        required: false
        default: true
        type: boolean
      app_name:
        required: false
        type: string
      environment:
        required: true
        type: string
        default: test
      run_zap_scan:
        required: false
        default: false
        type: boolean
      notify_slack:
        required: true
        default: false
        type: boolean

    secrets:
      FSD_GH_APP_ID:
        required: true
      FSD_GH_APP_KEY:
        required: true
      FS_BASIC_AUTH_USERNAME:
        required: true
      FS_BASIC_AUTH_PASSWORD:
        required: true
      AWS_ACCOUNT:
        required: true
      SLACK_BOT_TOKEN:
        required: false
      SLACK_NOTIFICATION_CHANNEL_ID:
        required: false

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      assets_required:
        required: false
        default: false
        type: boolean
      postgres_unit_testing:
        required: false
        default: false
        type: boolean
      db_name:
        required: false
        default: "postgres_db"
        type: string
      run_performance_tests:
        required: false
        default: false
        type: boolean
      run_e2e_tests_application:
        required: false
        default: false
        type: boolean
      run_e2e_tests_assessment:
        required: false
        default: false
        type: boolean
      run_static_security_python:
        required: false
        default: false
        type: boolean
      app_name:
        required: false
        type: string
      environment:
        required: true
        type: string
        default: dev
      run_zap_scan:
        required: false
        default: false
        type: boolean

jobs:
  run_shared_tests_aws:
    concurrency: run_shared_tests_aws-${{ inputs.environment }}
    uses: ./.github/workflows/run-shared-tests.yml
    with:
      # run_performance_tests: ${{inputs.run_performance_tests}}
      run_performance_tests: false
      run_e2e_tests_assessment: ${{inputs.run_e2e_tests_assessment}}
      run_e2e_tests_application: ${{inputs.run_e2e_tests_application}}
      run_e2e_tests_python: ${{ inputs.environment == 'dev' || inputs.environment == 'test' }}
      env_name: ${{inputs.environment}}
    secrets:
      FSD_GH_APP_ID: ${{ secrets.FSD_GH_APP_ID }}
      FSD_GH_APP_KEY: ${{ secrets.FSD_GH_APP_KEY }}
      FS_BASIC_AUTH_USERNAME: ${{ secrets.FS_BASIC_AUTH_USERNAME }}
      FS_BASIC_AUTH_PASSWORD: ${{ secrets.FS_BASIC_AUTH_PASSWORD }}
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}

  static_security_python:
    if: ${{ inputs.run_static_security_python == true}}
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: checkout app code for ${{inputs.app_name}}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          repository: ${{ github.repository_owner }}/${{ github.event.repository.name }}
          path: ${{inputs.app_name}}
      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
        with:
          python-version: 3.10.x
      - name: Install uv
        uses: astral-sh/setup-uv@4db96194c378173c656ce18a155ffc14a9fc4355 # v5
        with:
          enable-cache: true
      - name: install dependencies
        working-directory: ${{ inputs.app_name}}
        run: uv add --dev bandit==1.7.4
      - name: Bandit
        working-directory: ${{ inputs.app_name}}
        run: uv run bandit --exclude */.venv/* -r . -lll

  zap-scan-aws:
    if: inputs.app_name != '' && inputs.run_zap_scan == true
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@75ee1686750ab1511a73b26b77a2aedd295053ed # v0.12.0
        with:
          target: "https://${{inputs.app_name}}.${{ inputs.environment }}.access-funding.test.levellingup.gov.uk/"
          allow_issue_writing: False
          artifact_name: zap-scan-${{ inputs.environment }}

  notify_slack:
    needs:
      - run_shared_tests_aws
      - static_security_python
      - zap-scan-aws
    if: ${{ inputs.notify_slack && always() && (needs.run_shared_tests_aws.result == 'failure' || needs.static_security_python.result == 'failure' || needs.zap-scan-aws.result == 'failure' || needs.run_performance_tests.result == 'failure') }}
    uses: ./.github/workflows/notify-slack-deployment-failed.yml
    with:
      app_name: ${{ inputs.app_name }}
      env_name: ${{ inputs.environment }}
      github_username: ${{ github.actor }}
      workflow_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      compare_url: ${{ github.event_name == 'push' && github.event.compare || null }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_NOTIFICATION_CHANNEL_ID: ${{ secrets.SLACK_NOTIFICATION_CHANNEL_ID }}
