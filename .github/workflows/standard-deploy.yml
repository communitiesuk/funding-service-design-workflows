on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_call:
    inputs:
      app_name:
        required: false
        type: string
      environment:
        required: true
        type: string
      image_location:
        description: "Location of the image to deploy."
        type: string
        required: false
    secrets:
      AWS_ACCOUNT:
        required: true

jobs:
  deploy:
    if: ${{ github.actor != 'dependabot[bot]' }}
    concurrency:
      group: 'fsd-preaward-${{ inputs.environment }}'
      cancel-in-progress: false
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v4

    - name: Get current date
      shell: bash
      id: currentdatetime
      run: echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubCopilotDeploy
        role-session-name: "${{ inputs.app_name }}_${{ inputs.environemnt }}_copilot_${{ steps.currentdatetime.outputs.datetime }}"
        aws-region: eu-west-2

    - name: Install AWS Copilot CLI
      shell: bash
      run: |
        curl -Lo aws-copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x aws-copilot && sudo mv aws-copilot /usr/local/bin/copilot

    - name: confirm copilot env
      shell: bash
      run: |
        if [ $(copilot env ls) != "${{ inputs.environment }}" ]; then
          echo $(copilot env ls)
          exit 1
        fi

    - name: Inject Git SHA into manifest
      run: |
        yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-${{ inputs.app_name }}/manifest.yml

    - name: Inject replacement image into manifest
      run: |
        yq -i ".image.location = \"${{ inputs.image_location }}\""  copilot/fsd-${{ inputs.app_name }}/manifest.yml

    - name: Run database migrations
      run: scripts/migration-task-script.py ${{ inputs.environment }} ${{ inputs.image_location }}

    - name: Copilot ${{ inputs.environment }} deploy
      id: deploy_build
      run: |
        copilot svc init --app pre-award --name fsd-${{ inputs.app_name }}
        copilot svc deploy --env ${{ inputs.environment }} --app pre-award
