on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_call:
    inputs:
      assets_required:
        required: false
        default: false
        type: boolean
      postgres_unit_testing:
        required: false
        default: false
        type: boolean
      db_name:
        required: false
        default: "postgres_db"
        type: string

    # not required when not deploying to cf
    secrets:
      GOV_NOTIFY_API_KEY:
        required: false

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:

  testing-unit-aws:
    runs-on: ubuntu-latest
    environment: Dev
    if: ${{ inputs.postgres_unit_testing == false }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.x
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: install dependencies
        run: uv sync
      - name: build static assets (if frontend)
        if: ${{inputs.assets_required == true}}
        env:
          FLASK_ENV: "development"
        run: uv run python build.py
      - name: run unit tests
        env:
          GOV_NOTIFY_API_KEY: ${{ secrets.GOV_NOTIFY_API_KEY }}
        # pytest -m "not accessibility" runs every test which is not marked
        # accessibility.
        run: uv run python -m pytest -m "not accessibility" .

  testing-unit-postgres-aws:
    runs-on: ubuntu-latest
    environment: Dev
    if: ${{ inputs.postgres_unit_testing == true }}
    services:
      # Label used to access the service containers
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ${{ inputs.db_name }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.x
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: install dependencies
        run: uv sync
      - name: run unit tests
        run: uv run python -m pytest -m "not accessibility"
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/${{ inputs.db_name }}

  fix-pyscss:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Fix pyscss transitive dependencies
        id: check-pyscss
        run: |
          # `uv` is incorrectly pulling in enum34+pathlib2 for pyscss (if it's installed).
          # This breaks apps because enum34 overwrites the stdlib enum namespace.
          # `pyscss` is a very old lib that we should move away from.
          #
          uv sync
          if ! uv pip show pyscss; then
            echo "Pyscss is not installed. Skipping the update."
            echo "commit=false" >> "$GITHUB_OUTPUT"
          elif uv pip show enum34; then
            PYSCSS_VERSION=$(uv pip show pyscss | grep 'Version' | cut -d' ' -f2)
            uv remove pyscss
            uv add "pyscss==${PYSCSS_VERSION}"

            echo "Confirm that enum34 has been removed"

            if ! uv pip show enum34; then
              echo "commit=true" >> "$GITHUB_OUTPUT";
            else
              echo "commit=false" >> "$GITHUB_OUTPUT";
            fi
          fi

      - name: Commit and push
        id: commit-and-push
        if: steps.check-pyscss.outputs.commit == 'true'
        run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -am "Remove enum34+pathlib2

            When running in Renovate, uv is incorrectly including enum34 and pathlib2 as
            transitive dependencies of pyscss. pyscss only requires these for python
            versions below 3.4, but something in the dependency resolver is getting
            this wrong.

            https://github.com/astral-sh/uv/issues/9217

            A fix doesn't seem to be coming imminently.

            pyscss is a very old and unmaintained package that we should probably
            look to move away from sooner or later."
            git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
