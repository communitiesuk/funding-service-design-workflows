Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.

Mappings:
  DomainSuffixMap:
    dev:
      "DomainSuffix": ".access-funding.dev.communities.gov.uk"
    test:
      "DomainSuffix": ".access-funding.test.communities.gov.uk"
    uat:
      "DomainSuffix": ".access-funding.uat.communities.gov.uk"
    prod:
      "DomainSuffix": ".access-funding.communities.gov.uk"
  
Resources:
  CommunitiesRedirect:
    Type: 'AWS::CloudFront::Function'
    Properties:
      Name: CommunitiesRedirect
      AutoPublish: true
      FunctionCode: !Sub
      - |
        function handler(event) {
          const host = event.request.headers.host.value;

          // non-legacy domain pass through unchanged request
          if (host.endsWith('.communities.gov.uk')) {
            return event.request
          }

          var qs=[];
            for (var key in event.request.querystring) {
                if (event.request.querystring[key].multiValue) {
                    event.request.querystring[key].multiValue.forEach((mv) => {qs.push(key + "=" + mv.value)});
                } else {
                    qs.push(key + "=" + event.request.querystring[key].value);
                }
            };

          const parsedQueryString = qs.sort().join('&');
          const queryString = parsedQueryString ? "?" + parsedQueryString : '';

          const uri = event.request.uri;
          var newUrl;
          // Redirect renamed levellingup domains
          if (host.startsWith('frontend.'))
              newUrl = `https://apply${DomainSuffix}${!uri}${!queryString}`;
          else if (host.startsWith('authenticator.'))
              newUrl = `https://account${DomainSuffix}${!uri}${!queryString}`;
          else if (host.startsWith('assessment.'))
            newUrl = `https://assess${DomainSuffix}${!uri}${!queryString}`;
          else if (host.startsWith('forms.'))
            newUrl = `https://application-questions${DomainSuffix}${!uri}${!queryString}`;
          // unchanged name levellingup services
          else  {
            const serviceHostName = host.split('.')[0]
            newUrl = `https://${!serviceHostName}${DomainSuffix}${!uri}${!queryString}`
          }
          // TODO: Switch to 301 when we are sure this is working as intended
          var response = {
              statusCode: 302,
              statusDescription: "Found",
              headers: {
                  "location": {
                      value: newUrl,
                  },
              },
          };
            return response;
        }
      - DomainSuffix: !FindInMap [DomainSuffixMap, !Ref Env, 'DomainSuffix']
      FunctionConfig: 
        Comment: Redirects to the communities.gov.uk domains
        Runtime: cloudfront-js-2.0
Outputs:
  CommunitiesRedirectArn:
    Description: The ARN of the CloudFront function.
    Value: !GetAtt CommunitiesRedirect.FunctionARN
    Export:
      Name: CommunitiesRedirectArn
